{
  "string": {
    "prefix": "s",
    "body": "string"
  },
  "int": {
    "prefix": "i",
    "body": "int"
  },
  "float": {
    "prefix": "f",
    "body": "float"
  },
  "bool": {
    "prefix": "b",
    "body": "bool"
  },
  "option": {
    "prefix": "o",
    "body": "option($0)"
  },
  "j": {
    "prefix": "j",
    "body": "{j|$0|j}"
  },
  "[||]": {
    "prefix": "[",
    "body": "[| $0 |"
  },
  "->": {
    "prefix": ">",
    "body": "->$0"
  },
  "|>": {
    "prefix": ">>",
    "body": "|> $0"
  },
  "Js.t {.}": {
    "prefix": "jst",
    "body": "{. $0}"
  },
  "Js.t {..}": {
    "prefix": "jsot",
    "body": "{.. $0}"
  },
  "Js.nullable": {
    "prefix": "jsn",
    "body": "Js.nullable($0)"
  },
  "Js.Nullable.toOption": {
    "prefix": "jsnto",
    "body": "Js.Nullable.toOption"
  },
  "Js.Nullable.fromOption": {
    "prefix": "jsnfo",
    "body": "Js.Nullable.fromOption"
  },
  "React": {
    "prefix": "r",
    "body": "React"
  },
  "React.statelessComponent": {
    "prefix": "rsc",
    "body": "let component = React.statelessComponent(__MODULE__);"
  },
  "React.reducerComponent": {
    "prefix": "rrc",
    "body": "let component = React.reducerComponent(__MODULE__)"
  },
  "React.string": {
    "prefix": "rs",
    "body": "React.string"
  },
  "React.array": {
    "prefix": "ra",
    "body": "React.array"
  },
  "React.null": {
    "prefix": "rn",
    "body": "React.null"
  },
  "React.Update": {
    "prefix": "ru",
    "body": "React.Update"
  },
  "React.Update({...state})": {
    "prefix": "rus",
    "body": "React.Update({...state, $0})"
  },
  "React.SideEffects": {
    "prefix": "rse",
    "body": "React.SideEffects(({$1}) => {$0})"
  },
  "React.UpdateWithSideEffects": {
    "prefix": "ruwse",
    "body": [
      "React.UpdateWithSideEffects(",
      "  {...state, $1},",
      "  ({$2}) => $0",
      ")"
    ]
  },
  "React.NoUpdate": {
    "prefix": "rnu",
    "body": "React.NoUpdate"
  },
  "make": {
    "prefix": "lm",
    "body": [
      "let make = (${1:_}) => {",
      "  ...component,",
      "  render: _ =>",
      "    $0",
      "};"
    ]
  },
  "make.reducer": {
    "prefix": "lmr",
    "body": [
      "let make = (~$0, _) => {",
      "  ...component,",
      "  initialState: () => {},",
      "  reducer: (action, state) =>",
      "    switch action {",
      "    | Action => React.Update({...state, })",
      "    },",
      "  render: ({state, send}) =>",
      "",
      "};"
    ]
  },
  "JS.interface": {
    "prefix": "jsi",
    "body": [
      "/* JS interface */",
      "type jsProps = {",
      "  .",
      "  ${1}",
      "};",
      "",
      "let default = React.wrapReasonForJs(~component, (props: jsProps) => make($0));"
    ]
  },
  "children": {
    "prefix": "ch",
    "body": "children"
  },
  "external.css": {
    "prefix": "ecss",
    "body": "[@bs.module] external css: Js.t({..}) = \"./${0:Component}.scss\";"
  },
  "css": {
    "prefix": "css",
    "body": "Css"
  },
  "module Css": {
    "prefix": "mcss",
    "body": "module Css = $0;"
  },
  "className": {
    "prefix": "cn",
    "body": "className"
  },
  "className.css": {
    "prefix": "cncss",
    "body": "className=Css$0"
  },
  "div.className.css": {
    "prefix": "dcncss",
    "body": ["<div className=Css${1}>", "  $0", "</div>"]
  },
  "Cn.make": {
    "prefix": "cnm",
    "body": "Cn.make([$0])"
  }
}
