{
  "string": {
    "prefix": "s",
    "body": "string"
  },
  "int": {
    "prefix": "i",
    "body": "int"
  },
  "float": {
    "prefix": "f",
    "body": "float"
  },
  "bool": {
    "prefix": "b",
    "body": "bool"
  },
  "option": {
    "prefix": "o",
    "body": "option<$0>"
  },
  "->": {
    "prefix": ">",
    "body": "->$0"
  },
  "Option.getWithDefault": {
    "prefix": "ogwd",
    "body": "Option.getWithDefault($0)"
  },
  "Option.map": {
    "prefix": "om",
    "body": "Option.map($0)"
  },
  "Option.mapWithDefault": {
    "prefix": "omwd",
    "body": "Option.mapWithDefault($0)"
  },
  "Option.flatMap": {
    "prefix": "ofm",
    "body": "Option.flatMap($0)"
  },
  "Map.get": {
    "prefix": "mg",
    "body": "Map.get($0)"
  },
  "Map.getExn": {
    "prefix": "mge",
    "body": "Map.getExn($0)"
  },
  "Js.nullable": {
    "prefix": "jsn",
    "body": "Js.nullable<$0>"
  },
  "Js.Nullable.toOption": {
    "prefix": "jsnto",
    "body": "Js.Nullable.toOption"
  },
  "Js.Nullable.fromOption": {
    "prefix": "jsnfo",
    "body": "Js.Nullable.fromOption"
  },
  "React": {
    "prefix": "r",
    "body": "React"
  },
  "@react.component": {
    "prefix": "rc",
    "body": "@react.component"
  },
  "make": {
    "prefix": "lm",
    "body": "let make = ($1) => {\n  $0\n}"
  },
  "react.component.make": {
    "prefix": "rclm",
    "body": "@react.component\nlet make = (${1}) => {\n  $0\n}"
  },
  "React.string": {
    "prefix": "rs",
    "body": "React.string"
  },
  "React.array": {
    "prefix": "ra",
    "body": "React.array"
  },
  "React.null": {
    "prefix": "rn",
    "body": "React.null"
  },
  "dispatch": {
    "prefix": "d",
    "body": "dispatch"
  },
  "let (state, dispatch)": {
    "prefix": "lsd",
    "body": "let (state, dispatch) = $0"
  },
  "React.useReducer": {
    "prefix": "rur",
    "body": "React.useReducer($0)"
  },
  "React.useRef": {
    "prefix": "ruref",
    "body": "React.useRef($0)"
  },
  "React.useRef(Js.Nullable.null)": {
    "prefix": "rudref",
    "body": "React.useRef(Js.Nullable.null)"
  },
  "ReactDom.Ref.domRef": {
    "prefix": "rdr",
    "body": "ReactDom.Ref.domRef"
  },
  "React.useEffect": {
    "prefix": "rue",
    "body": "React.useEffect$1(() => {\n  $0\n})"
  },
  "React.useMemo": {
    "prefix": "rum",
    "body": "React.useMemo$1(() => $0)"
  },
  "React.useCallback": {
    "prefix": "ruc",
    "body": "React.useCallback$1($0)"
  },
  "ReactEvent": {
    "prefix": "re",
    "body": "ReactEvent"
  },
  "ReactEvent.Form.target##value": {
    "prefix": "reftv",
    "body": "ReactEvent.Form.target[\"value\"]"
  },
  "children": {
    "prefix": "ch",
    "body": "children"
  },
  "css": {
    "prefix": "css",
    "body": "css`\n  $0\n`"
  },
  "module Css": {
    "prefix": "mcss",
    "body": "module Css = $0"
  },
  "className": {
    "prefix": "cn",
    "body": "className"
  },
  "className.css": {
    "prefix": "cncss",
    "body": "className=Css$0"
  },
  "div.className.css": {
    "prefix": "dcncss",
    "body": "<div className=Css$1>\n  $0\n</div>"
  },
  "cx([])": {
    "prefix": "cx",
    "body": "cx([$0])"
  },
  "@log": {
    "prefix": "l",
    "body": "@log"
  },
  "%log.trace": {
    "prefix": "lt",
    "body": "%log.trace(\"$0\")"
  },
  "%log.debug": {
    "prefix": "ld",
    "body": "%log.debug(\"$0\")"
  },
  "%log.info": {
    "prefix": "li",
    "body": "%log.info(\"$0\")"
  },
  "%log.warn": {
    "prefix": "lw",
    "body": "%log.warn(\"$0\")"
  },
  "%log.error": {
    "prefix": "le",
    "body": "%log.error(\"$0\")"
  }
}
